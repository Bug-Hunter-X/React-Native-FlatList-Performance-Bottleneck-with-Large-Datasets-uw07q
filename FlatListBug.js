In React Native, when working with FlatList or SectionList, a common performance issue arises when rendering a large number of items.  Improperly handling key extraction or using complex components within list items can lead to slow rendering and scrolling issues. This bug manifests as sluggish scrolling, dropped frames, or even app crashes for very large datasets. The root cause lies in React Native's diffing algorithm, which struggles to efficiently update the list when items are added, removed, or reordered if keys are not properly assigned or if components are unnecessarily complex.